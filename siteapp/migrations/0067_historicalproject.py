# Generated by Django 3.2.14 on 2022-07-18 19:23

import auto_prefetch
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('controls', '0077_historicalpoam_historicalsystem'),
        ('guidedmodules', '0061_auto_20220101_0405'),
        ('siteapp', '0066_alter_project_tags'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalProject',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, db_index=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, db_index=True, editable=False, null=True)),
                ('is_organization_project', models.BooleanField(default=None, help_text='Each Organization has one Project that holds Organization membership privileges and Organization settings (in its root Task). In order to have a unique_together constraint with Organization, only the values None (which need not be unique) and True (which must be unique to an Organization) are used.', null=True)),
                ('is_account_project', models.BooleanField(default=False, help_text='Each User has one Project for account Tasks.')),
                ('extra', jsonfield.fields.JSONField(blank=True, help_text='Additional information stored with this object.')),
                ('version', models.CharField(blank=True, default='1.0', help_text="Project's version identifier", max_length=32, null=True)),
                ('version_comment', models.TextField(blank=True, help_text="Project's version comment", null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('import_record', auto_prefetch.ForeignKey(blank=True, db_constraint=False, help_text='The Import Record which created this Project.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='controls.importrecord')),
                ('organization', models.ForeignKey(blank=True, db_constraint=False, help_text='The Organization that this Project belongs to. User profiles (is_account_project is True) are not a part of any Organization.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='siteapp.organization')),
                ('portfolio', models.ForeignKey(blank=True, db_constraint=False, help_text='The Portfolio that this Project belongs to.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='siteapp.portfolio')),
                ('root_task', models.ForeignKey(blank=True, db_constraint=False, help_text="All Projects have a 'root Task' (e.g., 'guidedmodules.task'). The root Task defines important information about Project.", null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='guidedmodules.task')),
                ('system', models.ForeignKey(blank=True, db_constraint=False, help_text='The System that this Project is about.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='controls.system')),
            ],
            options={
                'verbose_name': 'historical project',
                'verbose_name_plural': 'historical projects',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
