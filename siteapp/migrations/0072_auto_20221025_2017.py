# Generated by Django 3.2.16 on 2022-10-25 20:17

import django.core.validators
from django.db import migrations, models
import jsonfield.fields


class Migration(migrations.Migration):

    dependencies = [
        ('controls', '0084_auto_20221025_1854'),
        ('siteapp', '0071_responsibleroles'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('address_type', models.CharField(blank=True, help_text='Type of address', max_length=250, null=True)),
                ('addr_line', jsonfield.fields.JSONField(blank=True, default=list, null=True)),
                ('city', models.CharField(blank=True, help_text='City', max_length=250, null=True)),
                ('state', models.CharField(blank=True, help_text='State', max_length=250, null=True)),
                ('postal_code', models.CharField(blank=True, help_text='Zip', max_length=250, null=True)),
                ('country', models.CharField(blank=True, help_text='Country', max_length=250, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TelephoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('phone_type', models.CharField(blank=True, help_text=' Indicates the type of phone number. May be locally defined or home, office, mobile', max_length=250, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='location',
            name='address_type',
        ),
        migrations.RemoveField(
            model_name='location',
            name='apt',
        ),
        migrations.RemoveField(
            model_name='location',
            name='city',
        ),
        migrations.RemoveField(
            model_name='location',
            name='country',
        ),
        migrations.RemoveField(
            model_name='location',
            name='state',
        ),
        migrations.RemoveField(
            model_name='location',
            name='street',
        ),
        migrations.RemoveField(
            model_name='location',
            name='zipcode',
        ),
        migrations.AddField(
            model_name='location',
            name='links',
            field=models.ManyToManyField(blank=True, related_name='location', to='controls.Link'),
        ),
        migrations.AddField(
            model_name='location',
            name='props',
            field=models.ManyToManyField(blank=True, related_name='location', to='controls.Prop'),
        ),
        migrations.AddField(
            model_name='location',
            name='urls',
            field=jsonfield.fields.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AddField(
            model_name='party',
            name='links',
            field=models.ManyToManyField(blank=True, related_name='party', to='controls.Link'),
        ),
        migrations.AddField(
            model_name='party',
            name='props',
            field=models.ManyToManyField(blank=True, related_name='party', to='controls.Prop'),
        ),
        migrations.AddField(
            model_name='party',
            name='remarks',
            field=models.TextField(blank=True, help_text='Additional commentary on the containing object.', null=True),
        ),
        migrations.AddField(
            model_name='role',
            name='links',
            field=models.ManyToManyField(blank=True, related_name='role', to='controls.Link'),
        ),
        migrations.AddField(
            model_name='role',
            name='props',
            field=models.ManyToManyField(blank=True, related_name='role', to='controls.Prop'),
        ),
        migrations.AddField(
            model_name='role',
            name='remarks',
            field=models.TextField(blank=True, help_text='Additional commentary on the containing object.', null=True),
        ),
        migrations.AlterField(
            model_name='location',
            name='remarks',
            field=models.TextField(blank=True, help_text='Additional commentary on the containing object.', null=True),
        ),
        migrations.AddField(
            model_name='location',
            name='address',
            field=models.ManyToManyField(blank=True, related_name='location', to='siteapp.Address'),
        ),
        migrations.AddField(
            model_name='location',
            name='emailAddresses',
            field=models.ManyToManyField(blank=True, related_name='location', to='siteapp.EmailAddress'),
        ),
        migrations.AddField(
            model_name='location',
            name='telephoneNumbers',
            field=models.ManyToManyField(blank=True, related_name='location', to='siteapp.TelephoneNumber'),
        ),
    ]
