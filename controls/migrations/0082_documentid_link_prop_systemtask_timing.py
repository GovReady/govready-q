# Generated by Django 3.2.16 on 2022-10-25 15:49

from django.db import migrations, models
import django.db.models.manager
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('controls', '0081_element_purpose'),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentId',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('scheme', models.URLField(help_text='Qualifies the kind of document identifier using a URI. If the scheme is not provided the value of the element will be interpreted as a string of characters', max_length=250, unique=True)),
                ('identifier', models.CharField(help_text='An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair. The value of a property is a simple scalar value, which may be expressed as a list of values.', max_length=250, unique=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('href', models.CharField(help_text='A resolvable URL reference to a resource.', max_length=250, unique=True)),
                ('rel', models.URLField(blank=True, help_text="Describes the type of relationship provided by the link. This can be an indicator of the link's purpose.", max_length=250, null=True)),
                ('mediaType', models.CharField(blank=True, help_text='Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.', max_length=250, null=True)),
                ('text', models.TextField(blank=True, help_text='A textual label to associate with the link, which may be used for presentation in a tool.', null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Prop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='A UUID (a unique identifier) for a Task.')),
                ('name', models.CharField(help_text="A textual label that uniquely identifies a specific attribute, characteristic, or quality of the property's containing object.", max_length=250, unique=True)),
                ('ns', models.CharField(help_text="A namespace qualifying the property's name. This allows different organizations to associate distinct semantics with the same name.", max_length=250, unique=True)),
                ('value', models.CharField(help_text='Title of a Task', max_length=250, unique=True)),
                ('propsClass', models.CharField(help_text="A textual label that provides a sub-type or characterization of the property's name. This can be used to further distinguish or discriminate between the semantics of multiple properties of the same object with the same name and ns.", max_length=250, unique=True)),
                ('remarks', models.TextField(blank=True, help_text='Additional commentary on the containing object.', null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Timing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('onDate', models.DateField(blank=True, help_text='The timing under which the task is intended to occur.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='A UUID (a unique identifier) for a Task.')),
                ('taskType', models.CharField(help_text='Type of the Task', max_length=250, unique=True)),
                ('name', models.CharField(help_text='Title of a Task', max_length=250, unique=True)),
                ('description', models.CharField(blank=True, help_text='Brief description of a Task', max_length=255, null=True)),
                ('remarks', models.TextField(blank=True, help_text='Additional commentary on the containing object.', null=True)),
                ('links', models.ManyToManyField(blank=True, related_name='task', to='controls.Link')),
                ('props', models.ManyToManyField(blank=True, related_name='task', to='controls.Prop')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
