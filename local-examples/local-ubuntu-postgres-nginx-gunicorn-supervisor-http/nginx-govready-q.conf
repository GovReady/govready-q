# Uncomment and edit for HTTPS connections
# Redirect HTTP port 80 requests to HTTPS port 443
#  server {
#    listen 80;
#    listen [::]:80;
#    server_name example.com;
#    return 301 https://example.com;
#  }

  server {
    listen 80;
    # listen 8888;

    # Uncomment and edit for HTTPS connections
    # listen 443 ssl;

    server_name example.com;

    # Uncomment for HTTPS connections
    # ssl on;

    # Uncomment and edit for HTTPS connections using letsencrypt certbot
    # Replace example.com with your domain
    # ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

    # Uncomment and edit for HTTPS connections storing certs manually
    # Replace example.com with your domain
    # ssl_certificate /etc/ssl/ssl-bundle.crt;
    # ssl_certificate_key /path/to/your_private.key;

    # Uncomment and editoptional HTTPS SSL settings
    # ssl_session_timeout 1d;
    # ssl_session_cache shared:SSL:20m;
    # ssl_session_tickets off;
    # ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    # ssl_prefer_server_ciphers on;
    # ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384# :ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECD# HE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-R# SA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES# 128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-R# SA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK'; 
    # ssl_stapling on;
    # ssl_stapling_verify on;
    # ssl_trusted_certificate /root/certs/APPNAME/APPNAME_nl.chained.crt;

    access_log  /var/log/nginx/govready-q.log;

    # Tell NINGX where to route the incoming coming request
    # GovReady-Q's WSGI server must be serving on the "proxy pass" location
    location / {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }

